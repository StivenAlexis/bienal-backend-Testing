Documentación de Pruebas: Sistema de Gestión de Escultores
Este archivo documenta las pruebas de los archivos SculptorController.test.js y SculptorUseCase.test.js, que verifican el correcto funcionamiento del sistema de gestión de escultores en la aplicación.

Índice
Propósito de los Archivos de Prueba
Descripción de SculptorController.test.js
Pruebas individuales
Descripción de SculptorUseCase.test.js
Pruebas individuales
Relación entre los Módulos
Instrucciones para Ejecución de Pruebas
1. Propósito de los Archivos de Prueba
El propósito de los archivos de prueba es garantizar que tanto la lógica de negocio como la gestión de respuestas HTTP en el sistema de gestión de escultores funcionen correctamente. Las pruebas se dividen en dos capas:

SculptorController.test.js: Verifica el correcto manejo de respuestas HTTP por parte del controlador.
SculptorUseCase.test.js: Valida la lógica de negocio y las interacciones con el repositorio de escultores.
2. Descripción de SculptorController.test.js
Este archivo contiene pruebas unitarias que validan los métodos de SculptorController. Cada prueba verifica que el controlador maneje correctamente las solicitudes y respuestas, llamando a los servicios adecuados y generando los códigos y mensajes HTTP correctos.

Pruebas Individuales:
should add a sculptor
Verifica que addSculptor llame al servicio addSculptor con los datos de la solicitud y responda con un estado 201 y el mensaje de éxito correspondiente.

should get a sculptor by name
Comprueba que getSculptor obtiene un escultor por su nombre, y retorna un estado 200 junto con los datos del escultor.

should return 404 if sculptor not found
Valida que getSculptor devuelva un 404 si el escultor no existe en la base de datos.

should get all sculptors
Verifica que getAllSculptors llame al servicio correspondiente y responda con la lista completa de escultores y un estado 200.

should update sculptor name
Asegura que updateSculptorName actualice el nombre de un escultor, llamando al servicio adecuado y devolviendo un estado 200 con un mensaje de éxito.

should update sculptor biography, contact, and works
Pruebas similares a la anterior, pero para actualizar la biografía, el contacto y las obras de un escultor.

should delete a sculptor
Valida que deleteSculptor elimine un escultor y responda con un estado 200 si la operación es exitosa.

should return 404 if sculptor not found when deleting
Verifica que deleteSculptor devuelva un estado 404 si el escultor no se encuentra en la base de datos.

3. Descripción de SculptorUseCase.test.js
Este archivo contiene pruebas para validar la lógica de negocio del caso de uso SculptorUseCase, que interactúa directamente con el repositorio de escultores (sculptorRepository). Las pruebas verifican el correcto funcionamiento de los métodos para añadir, obtener, actualizar y eliminar escultores.

Pruebas Individuales:
should add a sculptor
Comprueba que addSculptor llama al método add en el repositorio con los datos correctos del escultor.

should get a sculptor by name
Verifica que getSculptor devuelve el escultor correcto al buscar por nombre.

should return null if sculptor not found
Valida que getSculptor devuelva null si el escultor no se encuentra en el repositorio.

should get all sculptors
Asegura que getAllSculptors devuelve una lista completa de escultores.

should update sculptor name
Verifica que updateSculptorName actualice el nombre de un escultor correctamente, llamando al método setName y luego al método update en el repositorio.

should throw error if sculptor not found when updating name
Comprueba que updateSculptorName lance un error si el escultor no existe en el repositorio.

should delete a sculptor
Valida que deleteSculptor elimine correctamente un escultor y devuelva true si es exitoso.

should return false if sculptor not found when deleting
Verifica que deleteSculptor devuelva false si el escultor no se encuentra en el repositorio.

4. Relación entre los Módulos
SculptorController.test.js depende de SculptorUseCase para verificar la interacción correcta entre las solicitudes HTTP y la lógica de negocio.
SculptorUseCase.test.js se centra exclusivamente en validar la lógica interna de SculptorUseCase, simulando las interacciones con sculptorRepository.
5. Instrucciones para Ejecución de Pruebas
Asegúrate de que tienes jest instalado en el proyecto. Si no es así, instálalo con:

npm install --save-dev jest

Ejecuta todas las pruebas con el comando:
npm test

Los resultados mostrarán qué pruebas han pasado o fallado, permitiendo así verificar que el sistema de gestión de escultores funcione correctamente.

